import React from 'react';
import { Formik, FormikConsumer, useFormik } from 'formik';
import { Col, Container, Row, Form, Dropdown, Button, } from 'react-bootstrap';

function BugReportForm() {
    // const SignupForm = () => {
    //     // Notice that we have to initialize ALL of fields with values. These
    //     // could come from props, but since we don't want to prefill this form,
    //     // we just use an empty string. If you don't do this, React will yell
    //     // at you.
    // }
    const warningstyle = { color: 'red' };
    const validate = values => {
        
        const errors = {}
        if (!values.summery) {
            errors.summery = 'Required'
        }
        if (!values.expected) {
            errors.expected = 'Required'
        }
        if (!values.result) {
            errors.result = 'Required'
        }

        return errors;

    }
    const formik = useFormik({
        initialValues: {
            summery: '',
            result: '',
            expected: '',
        },
        validate,
        onSubmit: values => {
            alert(JSON.stringify(values, null, 2));
        },

    });
    return (
        <div>
            <Container>
                <Row>
                    <Col>
                        <Form onSubmit={formik.handleSubmit}>
                            <Form.Group>
                                <Form.Label>Project</Form.Label>
                                <Dropdown>
                                    <Dropdown.Toggle variant="primary" id="projectname">
                                        Select Project
                                </Dropdown.Toggle>
                                    <Dropdown.Menu>
                                        <Dropdown.Item href="#/action">dsa</Dropdown.Item>
                                        <Dropdown.Item href="#/action">sa</Dropdown.Item>
                                    </Dropdown.Menu>
                                </Dropdown>
                            </Form.Group>
                            {/* summery of the bug */}
                            <Form.Group>
                                <Form.Label>Summary</Form.Label>
                                <Form.Control type="text" placeholder="Summery of the bug" name="summery" onChange={formik.handleChange} onBlur={formik.handleBlur}//remove register
                                    value={formik.values.summery}></Form.Control>
                                {formik.errors.summery && formik.touched.summery ? <Form.Text style={warningstyle}>{formik.errors.summery}</Form.Text> : null}
                            </Form.Group>
                            {/* Resulting output */}
                            <Form.Group>
                                <Form.Label>Expected Result</Form.Label>
                                <Form.Control type="text" name="result" onChange={formik.handleChange} onBlur={formik.handleBlur}
                                    value={formik.values.result}></Form.Control>
                                {formik.errors.result && formik.touched.result ? <Form.Text style={warningstyle}>{formik.errors.result}</Form.Text> : null}
                            </Form.Group>
                            {/* Expected output */}
                            <Form.Group>
                                <Form.Label>Expected Result</Form.Label>
                                <Form.Control type="text" name="expected" onChange={formik.handleChange} onBlur={formik.handleBlur}
                                    value={formik.values.expected}></Form.Control>
                                {formik.errors.expected && formik.touched.expected ? <Form.Text style={warningstyle}>{formik.errors.expected}</Form.Text> : null}
                            </Form.Group>

                            <Button type='submit' >Add issue</Button>
                        </Form>
                    </Col>

                </Row>

            </Container>

        </div>
    )
}
export default BugReportForm;